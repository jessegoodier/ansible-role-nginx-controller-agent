---
- name: Fail if required variables are not defined
  assert:
    that: ("{{ item }} is defined") and ("{{ item }} | length > 0")
  loop:
    - controller_fqdn
    - api_key

- name: COPY files/nginx-plus-api.conf /etc/nginx/conf.d/ necessary for process monitoring.
  copy:
    src: "files/nginx-plus-api.conf"
    dest: "/etc/nginx/conf.d/nginx-plus-api.conf"
    force: yes

- name: Download the installer script from NGINX Controller
  get_url:
    url: "https://{{ controller_fqdn }}:8443/1.4/install/controller/"
    dest: "{{ ansible_env.HOME }}/install.sh"
    validate_certs: no
    force: yes
  register: controller_return

- name: Test for existing agent.conf
  stat:
    path: /etc/controller-agent/agent.conf
  register: agent_conf_result

- name: Try to backup agent.conf
  copy:
    src: /etc/controller-agent/agent.conf
    dest: /etc/controller-agent/agent.bak
    force: yes
    remote_src: yes
  when: agent_conf_result.stat.exists | bool

- name: Run the NGINX Controller agent installer
  shell: |
    API_KEY='{{ api_key }}' \
    {{ (controller_hostname | length > 0) | ternary('CONTROLLER_HOSTNAME=' + controller_hostname,'') }} \
    sh ./install.sh -y \
    {{ (location | length > 0) | ternary('-l ' + location,'') }} \
    {{ (instance_name | length > 0) | ternary('-i ' + instance_name,'') }}
  args:
    chdir: "{{ ansible_env.HOME }}"
    creates: /var/log/nginx-controller/agent.log
  register: agent_install

- name: Output agent install results
  debug:
    var: agent_install.stdout_lines

- name: Stop controller registration to preserve agent.conf
  service:
    name: controller-agent
    state: stopped

- name: Try to restore agent.conf
  copy:
    src: /etc/controller-agent/agent.bak
    dest: /etc/controller-agent/agent.conf
    force: yes
    remote_src: yes
  when: agent_conf_result.stat.exists | bool

- name: Start NGINX Controller agent
  service:
    name: controller-agent
    state: started

- name: Restart NGINX
  service:
    name: nginx
    state: restarted

- name: remove the install script
  file:
    path: "{{ ansible_env.HOME }}/install.sh"
    state: absent
